// Generated by view binder compiler. Do not edit!
package com.example.gr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gr.R;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWorkoutDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LineChart activityChart;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final TextView workoutAvgHr;

  @NonNull
  public final TextView workoutCalBurnt;

  @NonNull
  public final RelativeLayout workoutDetailToolbar;

  @NonNull
  public final TextView workoutDistance;

  @NonNull
  public final TextView workoutDuration;

  @NonNull
  public final LinearLayout workoutHeader;

  @NonNull
  public final TextView workoutMaxHr;

  @NonNull
  public final TextView workoutMinHr;

  @NonNull
  public final TextView workoutName;

  private ActivityWorkoutDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull LineChart activityChart, @NonNull ImageView imgBack, @NonNull TextView workoutAvgHr,
      @NonNull TextView workoutCalBurnt, @NonNull RelativeLayout workoutDetailToolbar,
      @NonNull TextView workoutDistance, @NonNull TextView workoutDuration,
      @NonNull LinearLayout workoutHeader, @NonNull TextView workoutMaxHr,
      @NonNull TextView workoutMinHr, @NonNull TextView workoutName) {
    this.rootView = rootView;
    this.activityChart = activityChart;
    this.imgBack = imgBack;
    this.workoutAvgHr = workoutAvgHr;
    this.workoutCalBurnt = workoutCalBurnt;
    this.workoutDetailToolbar = workoutDetailToolbar;
    this.workoutDistance = workoutDistance;
    this.workoutDuration = workoutDuration;
    this.workoutHeader = workoutHeader;
    this.workoutMaxHr = workoutMaxHr;
    this.workoutMinHr = workoutMinHr;
    this.workoutName = workoutName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWorkoutDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWorkoutDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_workout_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWorkoutDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_chart;
      LineChart activityChart = ViewBindings.findChildViewById(rootView, id);
      if (activityChart == null) {
        break missingId;
      }

      id = R.id.img_back;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.workout_avg_hr;
      TextView workoutAvgHr = ViewBindings.findChildViewById(rootView, id);
      if (workoutAvgHr == null) {
        break missingId;
      }

      id = R.id.workout_cal_burnt;
      TextView workoutCalBurnt = ViewBindings.findChildViewById(rootView, id);
      if (workoutCalBurnt == null) {
        break missingId;
      }

      id = R.id.workout_detail_toolbar;
      RelativeLayout workoutDetailToolbar = ViewBindings.findChildViewById(rootView, id);
      if (workoutDetailToolbar == null) {
        break missingId;
      }

      id = R.id.workout_distance;
      TextView workoutDistance = ViewBindings.findChildViewById(rootView, id);
      if (workoutDistance == null) {
        break missingId;
      }

      id = R.id.workout_duration;
      TextView workoutDuration = ViewBindings.findChildViewById(rootView, id);
      if (workoutDuration == null) {
        break missingId;
      }

      id = R.id.workout_header;
      LinearLayout workoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (workoutHeader == null) {
        break missingId;
      }

      id = R.id.workout_max_hr;
      TextView workoutMaxHr = ViewBindings.findChildViewById(rootView, id);
      if (workoutMaxHr == null) {
        break missingId;
      }

      id = R.id.workout_min_hr;
      TextView workoutMinHr = ViewBindings.findChildViewById(rootView, id);
      if (workoutMinHr == null) {
        break missingId;
      }

      id = R.id.workout_name;
      TextView workoutName = ViewBindings.findChildViewById(rootView, id);
      if (workoutName == null) {
        break missingId;
      }

      return new ActivityWorkoutDetailBinding((ConstraintLayout) rootView, activityChart, imgBack,
          workoutAvgHr, workoutCalBurnt, workoutDetailToolbar, workoutDistance, workoutDuration,
          workoutHeader, workoutMaxHr, workoutMinHr, workoutName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
