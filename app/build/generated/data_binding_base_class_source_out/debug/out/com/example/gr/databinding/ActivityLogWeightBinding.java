// Generated by view binder compiler. Do not edit!
package com.example.gr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gr.R;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLogWeightBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RelativeLayout addWeightLayout;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final ImageView imgSave;

  @NonNull
  public final TextView labelWeight;

  @NonNull
  public final TextView labelWeightHistory;

  @NonNull
  public final RelativeLayout layoutToolbar;

  @NonNull
  public final RelativeLayout logWeightDate;

  @NonNull
  public final RelativeLayout logWeightLayout;

  @NonNull
  public final RelativeLayout logWeightTitle;

  @NonNull
  public final RecyclerView rcvWeightLog;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvLabelDate;

  @NonNull
  public final EditText tvWeight;

  @NonNull
  public final LineChart weightLineChart;

  @NonNull
  public final CardView weightLineChartCard;

  @NonNull
  public final RelativeLayout weightLogListLayout;

  private ActivityLogWeightBinding(@NonNull NestedScrollView rootView,
      @NonNull RelativeLayout addWeightLayout, @NonNull ImageView imgBack,
      @NonNull ImageView imgSave, @NonNull TextView labelWeight,
      @NonNull TextView labelWeightHistory, @NonNull RelativeLayout layoutToolbar,
      @NonNull RelativeLayout logWeightDate, @NonNull RelativeLayout logWeightLayout,
      @NonNull RelativeLayout logWeightTitle, @NonNull RecyclerView rcvWeightLog,
      @NonNull TextView tvDate, @NonNull TextView tvLabelDate, @NonNull EditText tvWeight,
      @NonNull LineChart weightLineChart, @NonNull CardView weightLineChartCard,
      @NonNull RelativeLayout weightLogListLayout) {
    this.rootView = rootView;
    this.addWeightLayout = addWeightLayout;
    this.imgBack = imgBack;
    this.imgSave = imgSave;
    this.labelWeight = labelWeight;
    this.labelWeightHistory = labelWeightHistory;
    this.layoutToolbar = layoutToolbar;
    this.logWeightDate = logWeightDate;
    this.logWeightLayout = logWeightLayout;
    this.logWeightTitle = logWeightTitle;
    this.rcvWeightLog = rcvWeightLog;
    this.tvDate = tvDate;
    this.tvLabelDate = tvLabelDate;
    this.tvWeight = tvWeight;
    this.weightLineChart = weightLineChart;
    this.weightLineChartCard = weightLineChartCard;
    this.weightLogListLayout = weightLogListLayout;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLogWeightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLogWeightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_log_weight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLogWeightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_weight_layout;
      RelativeLayout addWeightLayout = ViewBindings.findChildViewById(rootView, id);
      if (addWeightLayout == null) {
        break missingId;
      }

      id = R.id.img_back;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.img_save;
      ImageView imgSave = ViewBindings.findChildViewById(rootView, id);
      if (imgSave == null) {
        break missingId;
      }

      id = R.id.label_weight;
      TextView labelWeight = ViewBindings.findChildViewById(rootView, id);
      if (labelWeight == null) {
        break missingId;
      }

      id = R.id.label_weight_history;
      TextView labelWeightHistory = ViewBindings.findChildViewById(rootView, id);
      if (labelWeightHistory == null) {
        break missingId;
      }

      id = R.id.layout_toolbar;
      RelativeLayout layoutToolbar = ViewBindings.findChildViewById(rootView, id);
      if (layoutToolbar == null) {
        break missingId;
      }

      id = R.id.log_weight_date;
      RelativeLayout logWeightDate = ViewBindings.findChildViewById(rootView, id);
      if (logWeightDate == null) {
        break missingId;
      }

      id = R.id.log_weight_layout;
      RelativeLayout logWeightLayout = ViewBindings.findChildViewById(rootView, id);
      if (logWeightLayout == null) {
        break missingId;
      }

      id = R.id.log_weight_title;
      RelativeLayout logWeightTitle = ViewBindings.findChildViewById(rootView, id);
      if (logWeightTitle == null) {
        break missingId;
      }

      id = R.id.rcv_weight_log;
      RecyclerView rcvWeightLog = ViewBindings.findChildViewById(rootView, id);
      if (rcvWeightLog == null) {
        break missingId;
      }

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_label_date;
      TextView tvLabelDate = ViewBindings.findChildViewById(rootView, id);
      if (tvLabelDate == null) {
        break missingId;
      }

      id = R.id.tv_weight;
      EditText tvWeight = ViewBindings.findChildViewById(rootView, id);
      if (tvWeight == null) {
        break missingId;
      }

      id = R.id.weight_line_chart;
      LineChart weightLineChart = ViewBindings.findChildViewById(rootView, id);
      if (weightLineChart == null) {
        break missingId;
      }

      id = R.id.weight_line_chart_card;
      CardView weightLineChartCard = ViewBindings.findChildViewById(rootView, id);
      if (weightLineChartCard == null) {
        break missingId;
      }

      id = R.id.weight_log_list_layout;
      RelativeLayout weightLogListLayout = ViewBindings.findChildViewById(rootView, id);
      if (weightLogListLayout == null) {
        break missingId;
      }

      return new ActivityLogWeightBinding((NestedScrollView) rootView, addWeightLayout, imgBack,
          imgSave, labelWeight, labelWeightHistory, layoutToolbar, logWeightDate, logWeightLayout,
          logWeightTitle, rcvWeightLog, tvDate, tvLabelDate, tvWeight, weightLineChart,
          weightLineChartCard, weightLogListLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
