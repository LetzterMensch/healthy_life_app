// Generated by view binder compiler. Do not edit!
package com.example.gr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gr.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnSignUp;

  @NonNull
  public final EditText signUpEditConfirmPassword;

  @NonNull
  public final EditText signUpEditEmail;

  @NonNull
  public final EditText signUpEditPassword;

  private ActivitySignUpBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnSignUp, @NonNull EditText signUpEditConfirmPassword,
      @NonNull EditText signUpEditEmail, @NonNull EditText signUpEditPassword) {
    this.rootView = rootView;
    this.btnSignUp = btnSignUp;
    this.signUpEditConfirmPassword = signUpEditConfirmPassword;
    this.signUpEditEmail = signUpEditEmail;
    this.signUpEditPassword = signUpEditPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_sign_up;
      AppCompatButton btnSignUp = ViewBindings.findChildViewById(rootView, id);
      if (btnSignUp == null) {
        break missingId;
      }

      id = R.id.sign_up_edit_confirm_password;
      EditText signUpEditConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (signUpEditConfirmPassword == null) {
        break missingId;
      }

      id = R.id.sign_up_edit_email;
      EditText signUpEditEmail = ViewBindings.findChildViewById(rootView, id);
      if (signUpEditEmail == null) {
        break missingId;
      }

      id = R.id.sign_up_edit_password;
      EditText signUpEditPassword = ViewBindings.findChildViewById(rootView, id);
      if (signUpEditPassword == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((ConstraintLayout) rootView, btnSignUp,
          signUpEditConfirmPassword, signUpEditEmail, signUpEditPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
