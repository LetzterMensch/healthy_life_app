// Generated by view binder compiler. Do not edit!
package com.example.gr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gr.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFoodBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView foodItemCalo;

  @NonNull
  public final TextView foodItemName;

  @NonNull
  public final TextView foodItemServings;

  @NonNull
  public final RelativeLayout layoutItem;

  private ItemFoodBinding(@NonNull RelativeLayout rootView, @NonNull TextView foodItemCalo,
      @NonNull TextView foodItemName, @NonNull TextView foodItemServings,
      @NonNull RelativeLayout layoutItem) {
    this.rootView = rootView;
    this.foodItemCalo = foodItemCalo;
    this.foodItemName = foodItemName;
    this.foodItemServings = foodItemServings;
    this.layoutItem = layoutItem;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.food_item_calo;
      TextView foodItemCalo = ViewBindings.findChildViewById(rootView, id);
      if (foodItemCalo == null) {
        break missingId;
      }

      id = R.id.food_item_name;
      TextView foodItemName = ViewBindings.findChildViewById(rootView, id);
      if (foodItemName == null) {
        break missingId;
      }

      id = R.id.food_item_servings;
      TextView foodItemServings = ViewBindings.findChildViewById(rootView, id);
      if (foodItemServings == null) {
        break missingId;
      }

      RelativeLayout layoutItem = (RelativeLayout) rootView;

      return new ItemFoodBinding((RelativeLayout) rootView, foodItemCalo, foodItemName,
          foodItemServings, layoutItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
