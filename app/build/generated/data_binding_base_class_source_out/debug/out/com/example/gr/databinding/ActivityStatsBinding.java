// Generated by view binder compiler. Do not edit!
package com.example.gr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gr.R;
import com.github.mikephil.charting.charts.PieChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStatsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBackToDiary;

  @NonNull
  public final TextView caloriesBurnt;

  @NonNull
  public final TextView caloriesGoal;

  @NonNull
  public final TextView caloriesIntake;

  @NonNull
  public final RelativeLayout estimatedWeightLayout;

  @NonNull
  public final LinearLayout label;

  @NonNull
  public final TextView labelBurnt;

  @NonNull
  public final TextView labelIntake;

  @NonNull
  public final TextView labelNotEatingEnough;

  @NonNull
  public final TextView labelRemaining;

  @NonNull
  public final TextView notEatingEnoughAdvice;

  @NonNull
  public final RelativeLayout notEatingEnoughLayout;

  @NonNull
  public final PieChart pieChart;

  @NonNull
  public final TextView tvEstimatedWeight;

  @NonNull
  public final LinearLayout value;

  private ActivityStatsBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnBackToDiary,
      @NonNull TextView caloriesBurnt, @NonNull TextView caloriesGoal,
      @NonNull TextView caloriesIntake, @NonNull RelativeLayout estimatedWeightLayout,
      @NonNull LinearLayout label, @NonNull TextView labelBurnt, @NonNull TextView labelIntake,
      @NonNull TextView labelNotEatingEnough, @NonNull TextView labelRemaining,
      @NonNull TextView notEatingEnoughAdvice, @NonNull RelativeLayout notEatingEnoughLayout,
      @NonNull PieChart pieChart, @NonNull TextView tvEstimatedWeight,
      @NonNull LinearLayout value) {
    this.rootView = rootView;
    this.btnBackToDiary = btnBackToDiary;
    this.caloriesBurnt = caloriesBurnt;
    this.caloriesGoal = caloriesGoal;
    this.caloriesIntake = caloriesIntake;
    this.estimatedWeightLayout = estimatedWeightLayout;
    this.label = label;
    this.labelBurnt = labelBurnt;
    this.labelIntake = labelIntake;
    this.labelNotEatingEnough = labelNotEatingEnough;
    this.labelRemaining = labelRemaining;
    this.notEatingEnoughAdvice = notEatingEnoughAdvice;
    this.notEatingEnoughLayout = notEatingEnoughLayout;
    this.pieChart = pieChart;
    this.tvEstimatedWeight = tvEstimatedWeight;
    this.value = value;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStatsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStatsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_stats, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStatsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back_to_diary;
      Button btnBackToDiary = ViewBindings.findChildViewById(rootView, id);
      if (btnBackToDiary == null) {
        break missingId;
      }

      id = R.id.calories_burnt;
      TextView caloriesBurnt = ViewBindings.findChildViewById(rootView, id);
      if (caloriesBurnt == null) {
        break missingId;
      }

      id = R.id.calories_goal;
      TextView caloriesGoal = ViewBindings.findChildViewById(rootView, id);
      if (caloriesGoal == null) {
        break missingId;
      }

      id = R.id.calories_intake;
      TextView caloriesIntake = ViewBindings.findChildViewById(rootView, id);
      if (caloriesIntake == null) {
        break missingId;
      }

      id = R.id.estimated_weight_layout;
      RelativeLayout estimatedWeightLayout = ViewBindings.findChildViewById(rootView, id);
      if (estimatedWeightLayout == null) {
        break missingId;
      }

      id = R.id.label;
      LinearLayout label = ViewBindings.findChildViewById(rootView, id);
      if (label == null) {
        break missingId;
      }

      id = R.id.label_burnt;
      TextView labelBurnt = ViewBindings.findChildViewById(rootView, id);
      if (labelBurnt == null) {
        break missingId;
      }

      id = R.id.label_intake;
      TextView labelIntake = ViewBindings.findChildViewById(rootView, id);
      if (labelIntake == null) {
        break missingId;
      }

      id = R.id.label_not_eating_enough;
      TextView labelNotEatingEnough = ViewBindings.findChildViewById(rootView, id);
      if (labelNotEatingEnough == null) {
        break missingId;
      }

      id = R.id.label_remaining;
      TextView labelRemaining = ViewBindings.findChildViewById(rootView, id);
      if (labelRemaining == null) {
        break missingId;
      }

      id = R.id.not_eating_enough_advice;
      TextView notEatingEnoughAdvice = ViewBindings.findChildViewById(rootView, id);
      if (notEatingEnoughAdvice == null) {
        break missingId;
      }

      id = R.id.not_eating_enough_layout;
      RelativeLayout notEatingEnoughLayout = ViewBindings.findChildViewById(rootView, id);
      if (notEatingEnoughLayout == null) {
        break missingId;
      }

      id = R.id.pie_chart;
      PieChart pieChart = ViewBindings.findChildViewById(rootView, id);
      if (pieChart == null) {
        break missingId;
      }

      id = R.id.tv_estimated_weight;
      TextView tvEstimatedWeight = ViewBindings.findChildViewById(rootView, id);
      if (tvEstimatedWeight == null) {
        break missingId;
      }

      id = R.id.value;
      LinearLayout value = ViewBindings.findChildViewById(rootView, id);
      if (value == null) {
        break missingId;
      }

      return new ActivityStatsBinding((ConstraintLayout) rootView, btnBackToDiary, caloriesBurnt,
          caloriesGoal, caloriesIntake, estimatedWeightLayout, label, labelBurnt, labelIntake,
          labelNotEatingEnough, labelRemaining, notEatingEnoughAdvice, notEatingEnoughLayout,
          pieChart, tvEstimatedWeight, value);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
